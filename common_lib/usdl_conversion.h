/***************************************************************************************************
*                    (c) Copyright 1992-2009 Embedded Products Research Center
*                                       All Rights Reserved
*
*\File          usdl_conversion.h
*\Description   数据转换模块，为不同进制、不同类型、不同结构等对象提供相互转换函数
*\Note          术语Map:用于数据与字符串之间显示值不变的转换
*\Log           2008.6.24   Ver 1.0    张波
*               创建文件。
***************************************************************************************************/

#ifndef _USDL_CONVERSION_H
#define _USDL_CONVERSION_H

#include "usdl_type.h"

extern const u8 HexList[];  /*!<十六进制字符串列表*/

/***************************************************************************************************
*\Function      BCDToDECU8
*\Description   U8BCD转为DEC
*\Parameter     bcd BCD值（指针）
*\Return        void
*\Log           2008.11.17    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void BCDToDECU8(u8* bcd);

/***************************************************************************************************
*\Function      BCDToDECU16
*\Description   U16BCD转为DEC
*\Parameter     bcd BCD值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void BCDToDECU16(u16* bcd);

/***************************************************************************************************
*\Function      BCDToDECU32
*\Description   U32BCD转为DEC
*\Parameter     bcd BCD值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void BCDToDECU32(u32* bcd);

/***************************************************************************************************
*\Function      BCDToDECU64
*\Description   U64BCD转为DEC
*\Parameter     bcd BCD值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void BCDToDECU64(u64* bcd);

/***************************************************************************************************
*\Function      DECToBCDU8
*\Description   DEC转为BCD
*\Parameter     dec DEC值（指针）
*\Return        void
*\Log           2008.11.17    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void DECToBCDU8(u8* dec);

/***************************************************************************************************
*\Function      GetBCDToDECU8
*\Description   BCDu8转为DEC
*\Parameter     bcd BCD值
*\Return        u8  DEC值
*\Log           2008.6.24   Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8 GetBCDToDECU8(const u8 bcd);

/***************************************************************************************************
*\Function      GetBCDToDECU16
*\Description   BCDu16转为DEC
*\Parameter     bcd BCD值
*\Return        u16 DEC值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u16 GetBCDToDECU16(const u16 bcd);

/***************************************************************************************************
*\Function      GetBCDToDECU32
*\Description   BCDu32转为DEC
*\Parameter     bcd BCD值
*\Return        u32 DEC值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u32 GetBCDToDECU32(const u32 bcd);

/***************************************************************************************************
*\Function      GetBCDToDECU64
*\Description   BCDu64转为DEC
*\Parameter     bcd BCD值
*\Return        u64 DEC值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u64 GetBCDToDECU64(const u64 bcd);

/***************************************************************************************************
*\Function      DECToBCDU8
*\Description   DEC转为BCD
*\Parameter     dec DEC值（指针）
*\Return        void
*\Log           2008.11.17    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void DECToBCDU8(u8* dec);

/***************************************************************************************************
*\Function      DECToBCDU16
*\Description   U16BCD转为DEC
*\Parameter     dec DEC值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void DECToBCDU16(u16* dec);

/***************************************************************************************************
*\Function      DECToBCDU32
*\Description   U32DEC转为BCD
*\Parameter     dec DEC值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void DECToBCDU32(u32* dec);

/***************************************************************************************************
*\Function      DECToBCDU64
*\Description   U64DEC转为BCD
*\Parameter     dec DEC值（指针）
*\Return        void
*\Log           2008.12.09    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void DECToBCDU64(u64* dec);

/***************************************************************************************************
*\Function      GetDECToBCDU8
*\Description   DECu8转为BCD
*\Parameter     dec DEC值
*\Return        u8  BCD值
*\Log           2008.6.24   Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8 GetDECToBCDU8(const u8 dec);

/***************************************************************************************************
*\Function      GetDECToBCDU16
*\Description   BCDu16转为DEC
*\Parameter     bcd BCD值
*\Return        u16 DEC值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u16 GetDECToBCDU16(const u16 dec);

/***************************************************************************************************
*\Function      GetDECToBCDU32
*\Description   DECu32转为BCD
*\Parameter     bcd dec值
*\Return        u32 BCD值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u32 GetDECToBCDU32(const u32 dec);

/***************************************************************************************************
*\Function      GetDECToBCDU64
*\Description   DECu64转为BCD
*\Parameter     dec DEC值
*\Return        u64 BCD值
*\Log           2009.08.28    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u64 GetDECToBCDU64(const u64 dec);

/***************************************************************************************************
*\Function      DECToBCD
*\Description   DEC转为BCD
*\Parameter     dst BCD值存储空间
*\Parameter     len 空间长度
*\Parameter     dec DEC值
*\Return        u8* dst + 实际存储长度
*\Log           2008.12.10    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8* DECToBCD(void* dst, u8 len, u64 dec);

/***************************************************************************************************
*\Function      GetDECToBCDU8
*\Description   DEC转为BCD
*\Parameter     dec DEC值
*\Return        u8  BCD值
*\Log           2008.6.24   Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8 GetDECToBCDU8(const u8 dec);

/***************************************************************************************************
*\Function      CheckBCD
*\Description   检查BCD码是否正确
*\Parameter     bcd     要检查的BCD码
*\Return        bool    检查结果
*\Log           2008.03.05    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
bool CheckBCD(u8 bcd);

/***************************************************************************************************
*\Function      CheckDECToBCD
*\Description   检查用来转为BCD码的DEC码是否正确
*\Parameter     dec     DEC值
*\Return        bool    检查结果
*\Note          判断dec是否小于99
*\Log           2008.10.08    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
bool CheckDECToBCD(u8 dec);

/***************************************************************************************************
*\Function      BCDToXS3
*\Description   将BCD码转为余三码(Excess-3)
*\Parameter     bcd DEC值
*\Return        u8  余三码
*\Log           2008.02.18    Ver 1.0    张波
*               创建函数。
*               2008.10.06      Ver 1.1    张波
*                改名, 原名ThreeCode。
***************************************************************************************************/
u8 BCDToXS3(u8 bcd);

/***************************************************************************************************
*\Function      XS3ToBCD
*\Description   将余三码(Excess-3)转为BCD码
*\Parameter     xs3 余三码
*\Return        u8    DEC值
*\Log           2008.02.18    Ver 1.0    张波
*               创建函数。
*               2008.10.06      Ver 1.1    张波
*                改名, 原名UnThreeCode。
***************************************************************************************************/
u8 XS3ToBCD(u8 xs3);

/***************************************************************************************************
*\Function      ByteMapChar
*\Description   将指字节转化为16进制形式的以0结尾的字符串
*\Parameter     str     存放16进制字符串的缓冲区
*\Parameter     byte    字节
*\Return        void
*\Log           2008.9.19   Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void ByteMapChar(u8* str, u8 byte);

/***************************************************************************************************
*\Function      BytesMapChar
*\Description   将指定长度的字节串逐个转为16进制字符并由用户处理。
*\Parameter     bytes   字节串
*\Parameter     len     字节串长度
*\Parameter     func    用户函数
*\Return        void
*\Note
*\Log           2010.06.18    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
void BytesMapChar(u8* bytes, u32 len, void (*func)(u8));

/***************************************************************************************************
*\Function      BytesMapHexStr
*\Description   将定长缓冲区buf转换为以seperator分割的16进制表示的字符串。
*\Parameter     str             目标字符串缓冲区
*\Parameter     max_str_len     目标缓冲区长度
*\Parameter     buf             源缓冲区
*\Parameter     buf_len         源缓冲区长度
*\Parameter     seperator       分隔字符串, NULL表示没有分割。
*\Return        u32             转换后的字符串长度
*\Log           2010.03.26    Ver 1.0    张波
*               创建函数。
*               2011.05.03    Ver 1.1    张波
*               与PrintHex合并优化。
***************************************************************************************************/
u32 BytesMapHexStr(u8* str, u32 max_str_len, u8* buf, u32 buf_len, const u8* seperator);

/***************************************************************************************************
*\Function      HexStrToBytes
*\Description   HEX字符串转化为字节数组
*\Parameter     data        缓冲区指针
*\Parameter     data_len    缓冲区长度
*\Parameter     hex         HEX字符串
*\Parameter     skip_invalid    是否跳过非法字符(非0~9, a~f)
*\Return        u32     所转化的字节数组长度，若skip_invalid为FALSE，在hex字符串中遇到非法字符
                        则立刻返回0.
*\Note          如“12345678”会转化为0x12 0x34 0x56 0x78依次放到buf里
*\Log           2010.11.10    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u32 HexStrToBytes(u8* data, u32 data_len, u8* hex, bool skip_invalid);

/***************************************************************************************************
*\Function      BCDStrToBytes
*\Description   将BCD形式的字符串转化为BCD码
*\Parameter     str
*\Parameter     bcd
*\Return        u32
*\Note          如“12345678”会转化为0x12 0x34 0x56 0x78依次放到buf里
*\Log           2010.04.15    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u32 BCDStrToBytes(u8* str, u8* bcd, u32 bcd_max_len);

/***************************************************************************************************
*\Function      AToI
*\Description   字符串转整型
*\Parameter     str     字符串
*\Return        s64     整数
*\Note
*\Log           2010.12.15    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
s64 AToI(const u8* str);

/***************************************************************************************************
*\Function      IToA
*\Description   数据转字符串
*\Parameter     val     值
*\Parameter     buf     字符串
*\Parameter     radix   进制值
*\Return        u8*     字符串缓冲区
*\Note
*\Log           2010.12.15    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8* IToA(s64 val, u8* buf, s32 radix);

/***************************************************************************************************
*\Function      UToA
*\Description   无符号数转字符串
*\Parameter     val     值
*\Parameter     buf     字符串
*\Parameter     radix   进制值
*\Return        u8*     字符串缓冲区
*\Note
*\Log           2010.12.15    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8* UToA(s64 val, u8* buf, s32 radix);

/***************************************************************************************************
*\Function      SToA
*\Description   有符号数转字符串
*\Parameter     val     值
*\Parameter     buf     字符串
*\Parameter     radix   进制值
*\Return        u8*     字符串缓冲区
*\Note
*\Log           2010.12.15    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u8* SToA(s64 val, u8* buf, s32 radix);

/***************************************************************************************************
*\Function      StrToL
*\Description   字符串转数据。
*\Parameter     nptr
*\Parameter     endptr
*\Parameter     ibase
*\Return        s32
*\Note          1)将nptr指向的字符串，根据参数base，按权转化为s32, 然后返回这个值。
*\Note          2)参数base的范围为2~36,和0；它决定了字符串以被转换为整数的权值。
*\Log           2010.12.20    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
s32 StrToL(const u8* nptr, const u8** endptr, s32 ibase);

/***************************************************************************************************
*\Function      StrToUL
*\Description   字符串转无符号数据。
*\Parameter     nptr
*\Parameter     endptr
*\Parameter     ibase
*\Return        u32
*\Note
*\Log           2010.12.20    Ver 1.0    张波
*               创建函数。
***************************************************************************************************/
u32 StrToUL(const u8* nptr, const u8** endptr, s32 ibase);

#endif /*_USDL_CONVERSION_H*/
